# -*- coding: utf-8 -*-
"""Titanic survival prediction

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AsKnNEuR9OhVwSqt23_kRgdrv376j3wU
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

# Load dataset
data = pd.read_csv("/content/Titanic-Dataset (1).csv")  # Ensure the file is in the same directory or provide the full path

# Data Preprocessing
# Drop unnecessary columns
data.drop(['PassengerId', 'Name', 'Ticket', 'Cabin'], axis=1, inplace=True)

# Handle missing values
data['Age'].fillna(data['Age'].median(), inplace=True)
data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)

# Encode categorical variables
encoder = LabelEncoder()
data['Sex'] = encoder.fit_transform(data['Sex'])  # Male=1, Female=0
data['Embarked'] = encoder.fit_transform(data['Embarked'])  # Encode Embarked

# Select features and target
X = data.drop('Survived', axis=1)  # Features
y = data['Survived']  # Target

# Normalize numerical features
scaler = StandardScaler()
X[['Age', 'Fare']] = scaler.fit_transform(X[['Age', 'Fare']])

# Split dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = LogisticRegression()
model.fit(X_train, y_train)

# Predict
y_pred = model.predict(X_test)

# Evaluate model
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print("Accuracy:", accuracy)
print("\nClassification Report:\n", report)